/**
 * Sorts values of `$list` using quick-sort algorithm respecting `$order`
 * ---
 * @ignore Documentation: http://sassylists.com/documentation/#sort
 * ---
 * @requires str-compare
 * ---
 * @param {List} $list  - list to sort
 * @param {List} $order - order to respect
 * ---
 * @returns {List}
 */
@function sort($list, $order: "!" "#" "$" "%" "&" "'" "(" ")" "*" "+" "," "-" "." "/" "[" "\\" "]" "^" "_" "{" "|" "}" "~" "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z") {
  $less:  ();
  $equal: ();
  $large: ();
  $length: length($list);

  @if $length > 1 {
    $seed: nth($list, ceil($length / 2));
    @each $item in $list {
      @if $item == $seed {
        $equal: append($equal, $item, list-separator($list));
      }
      @else if str-compare($item, $seed, $order) {
        $less: append($less, $item, list-separator($list));
      }
      @else if not str-compare($item, $seed, $order) {
        $large: append($large, $item, list-separator($list));
      }
    }
    @return join(join(sort($less, $order), $equal), sort($large, $order));
  }
  @return $list;
}

/**
 * @alias sort
 */
@function order($list) {
  @return sort($list);
}
